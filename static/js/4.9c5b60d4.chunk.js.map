{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","containers/Auth/Auth.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","a","createElement","className","ValidationError","errorMessage","elementType","Object","assign","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","Auth","state","controls","email","type","placeholder","validation","required","isEmail","valid","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","updatedObject","_this","D_react_project_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checkValidity","setState","submitHandler","preventDefault","onAuth","swicthAuthModeHandler","prevState","this","buildingBurger","authRedirectPath","onSetAuthRedirectPath","_this2","formElementArray","id","config","form","formElement","react__WEBPACK_IMPORTED_MODULE_6___default","_components_UI_Input_Input__WEBPACK_IMPORTED_MODULE_9__","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_13__","err","message","authRedirect","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_10__","btnType","clicked","Component","connect","auth","error","token","burgerBuilder","building","dispatch","actions"],"mappings":"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","file":"static/js/4.9c5b60d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.css';\r\n\r\nconst input = (props) => {\r\n\r\n\tlet inputElement = null;\r\n\tconst inputClasses = [classes.InputElement];\r\n\r\n\tif (props.invalid && props.shouldValidate && props.touched) {\r\n\t\tinputClasses.push(classes.Invalid);\r\n\t}\r\n\r\n\tlet validationError = null;\r\n\tif(props.invalid && props.touched) {\r\n\t\tvalidationError = <p className={classes.ValidationError}>{props.errorMessage}</p>\r\n\t}\r\n\r\n\tswitch (props.elementType) {\r\n\t\tcase ('input'): \r\n\t\t\tinputElement = <input \r\n\t\t\t\tclassName={inputClasses.join(' ')} \r\n\t\t\t\t{...props.elementConfig} \r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>;\r\n\t\t\tbreak;\r\n\t\tcase ('textarea'):\r\n\t\t\tinputElement = <textarea \r\n\t\t\t\tclassName={inputClasses.join(' ')} \r\n\t\t\t\t{...props.elementConfig} \r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>;\r\n\t\t\tbreak;\r\n\t\tcase ('select'): \r\n\t\t\tinputElement = ( \r\n\t\t\t<select className={inputClasses.join(' ')} value={props.value} onChange={props.changed}> \r\n\t\t\t\t{props.elementConfig.options.map(option => (\r\n\t\t\t\t\t\t<option value={option.value} key={option.value}> \r\n\t\t\t\t\t\t{option.displayValue}</option>\r\n\t\t\t\t\t))}\r\n\t\t\t</select>\r\n\t\t\t);\r\n\t\t\tbreak;\t\r\n\t\tdefault:\r\n\t\t\tinputElement = <input \r\n\t\t\t\tclassName={inputClasses.join(' ')} \r\n\t\t\t\t{...props.elementConfig} \r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={props.changed}\r\n\t\t\t\t/>;\r\n\t\t\t\r\n\t}\t\r\n\r\n\treturn (\t\r\n\t\t<div className={classes.Input}>\r\n\t\t<label className={classes.Label}>{props.label}</label>\r\n\t\t{inputElement}\r\n\t\t{validationError}\r\n\t</div>\r\n);\r\n\r\n}\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\",\"ValidationError\":\"Input__ValidationError__1ElSg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth__Auth__2YUr1\"};","import React, { Component }from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport {updatedObject, checkValidity} from '../../shared/utility';\r\n\r\nclass Auth extends Component {\r\n\tstate = {\r\n\t\tcontrols: {\r\n\t\t\temail: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\tplaceholder: 'Email'\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tisEmail: true\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t},\r\n\t\t\tpassword: {\r\n\t\t\t\telementType: 'input',\r\n\t\t\t\telementConfig: {\r\n\t\t\t\t\ttype: 'password',\r\n\t\t\t\t\tplaceholder: 'Password'\r\n\t\t\t\t},\r\n\t\t\t\tvalue: '',\r\n\t\t\t\tvalidation: {\r\n\t\t\t\t\trequired: true,\r\n\t\t\t\t\tminLength: 6\r\n\t\t\t\t},\r\n\t\t\t\tvalid: false,\r\n\t\t\t\ttouched: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tisSignUp: true\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tif(!this.props.buildingBurger && this.props.authRedirectPath !=='/') {\r\n\t\t\tthis.props.onSetAuthRedirectPath();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tinputChangedHandler = (event, controlName) => {\r\n\t\tconst updatedControls = updatedObject(this.state.controls, {\r\n\t\t\t[controlName]: updatedObject(this.state.controls[controlName], {\r\n\t\t\t\tvalue: event.target.value,\r\n\t\t\t\tvalid: checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n\t\t\t\ttouched: true  \r\n\t\t\t})\r\n\t\t});\r\n\t\tthis.setState({controls: updatedControls})\r\n\t}\r\n\r\n\tsubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp);\r\n\t}\r\n\r\n\tswicthAuthModeHandler = () => {\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {isSignUp: !prevState.isSignUp};\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst formElementArray = [];\r\n\t\t\t\tfor (let key in this.state.controls) {\r\n\t\t\t\t\tformElementArray.push({\r\n\t\t\t\t\t\tid: key, \r\n\t\t\t\t\t\tconfig: this.state.controls[key]\r\n\t\t\t\t\t});\r\n\t\t\t\t};\r\n\r\n\t\tlet form = formElementArray.map(formElement => (\r\n\t\t\t\t<Input \r\n\t\t\t\t\tkey={formElement.id} \r\n\t\t\t\t\telementType={formElement.config.elementType}\r\n\t\t\t\t\telementConfig={formElement.config.elementConfig}\r\n\t\t\t\t\tvalue={formElement.config.value}\t\r\n\t\t\t\t\tinvalid={!formElement.config.valid}\r\n\t\t\t\t\tshouldValidate={formElement.config.validation}\r\n\t\t\t\t\ttouched={formElement.config.touched}\r\n\t\t\t\t\tchanged={(event) => this.inputChangedHandler(event, formElement.id)} />\r\n\r\n\t\t\t) )\r\n\r\n\t\tif(this.props.loading) {\r\n\t\t\tform = <Spinner />\r\n\t\t}\r\n\r\n\t\tlet errorMessage = null;\r\n\r\n\t\tif(this.props.err) {\r\n\t\t\terrorMessage = (<p>{this.props.err.message}</p>);\r\n\t\t}\r\n\r\n\t\tlet authRedirect = null;\r\n\r\n\t\tif(this.props.isAuthenticated) {\r\n\t\t\tauthRedirect = <Redirect to={this.props.authRedirectPath} />\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className={classes.Auth}>\r\n\t\t\t\t{authRedirect}\r\n\t\t\t\t{errorMessage}\r\n\t\t\t\t<form onSubmit={this.submitHandler}>\r\n\t\t\t\t{form}\r\n\t\t\t\t<Button btnType=\"Success\">Submit</Button>\r\n\t\t\t\t</form>\r\n\t\t\t\t<Button clicked={this.swicthAuthModeHandler} btnType=\"Danger\">{this.state.isSignUp? 'Sign In': 'Sign Up'}</Button>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tloading: state.auth.loading,\r\n\t\terr: state.auth.error,\r\n\t\tisAuthenticated: state.auth.token !== null,\r\n\t\tbuildingBurger: state.burgerBuilder.building,\r\n\t\tauthRedirectPath: state.auth.authRedirectPath\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonAuth: (email, password, isSignUp) => dispatch(actions.auth(email, password, isSignUp)),\r\n\t\tonSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath('/'))\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth); "],"sourceRoot":""}